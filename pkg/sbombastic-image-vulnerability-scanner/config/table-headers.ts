
export const REGISTRY_SCAN_TABLE = [
  {
    name: "registry",
    labelKey: "imageScanner.registries.registrytable.header.registry",
    value: "metadata.name",
    sort: "metadata.name",
    formatter: "RegistryNameCell",
  },
  {
    name: "namespace",
    labelKey: "imageScanner.registries.registrytable.header.namespace",
    value: "metadata.namespace",
    sort: "metadata.namespace",
  },
  {
    name: "uri",
    labelKey: "imageScanner.registries.registrytable.header.uri",
    value: "spec.uri",
    sort: "spec.uri",
  },
  {
    name: "repositories",
    labelKey: "imageScanner.registries.registrytable.header.repos",
    value: "spec.repositories",
    sort: "spec.repositories",
  },
  {
    name: "scanInterval",
    labelKey: "imageScanner.registries.registrytable.header.schedule",
    value: (row: any) => `Every ${row.spec.scanInterval}`,
    sort: "spec.scanInterval",
  },
  {
    name: "status",
    labelKey: "imageScanner.registries.registrytable.header.status",
    value: "currStatus",
    // value: "scanRec.currStatus",
    formatter: "RegistryStatusCellBadge",
    sort: "currStatus",
    // sort: "scanRec.currStatus",
    width: 100,
  },
  {
    name: "progress",
    labelKey: "imageScanner.registries.registrytable.header.progress",
    value: "progress",
    // value: "scanRec.progress",
    formatter: "ProgressCell",
    sort: "progress",
    // sort: "scanRec.progress",
    width: 120,
  },
  {
    name: "previousScan",
    labelKey: "imageScanner.registries.registrytable.header.prevScan",
    value: "previousScan",
    // value: "scanRec.previousScan",
    formatter: "PreviousScanCell",
    sort: "previousScan",
    // sort: "scanRec.previousScan",
    width: 200,
  },
];

export const REGISTRY_SCAN_HISTORY_TABLE = [
  {
    name: "status",
    labelKey: "imageScanner.registries.configuration.scanTable.header.status",
    value: "status.statusResult.type",
    formatter: "RegistryStatusCellBadge",
    sort: "status.statusResult.type",
    width: 100,
  },
  {
    name: "since",
    labelKey: "imageScanner.registries.configuration.scanTable.header.since",
    value: "status.statusResult.lastTransitionTime",
    formatter: "Date",
    sort: "status.statusResult.lastTransitionTime:desc",
  },
  {
    name: "progress",
    labelKey: "imageScanner.registries.configuration.scanTable.header.progress",
    getValue: (row: any) => row,
    formatter: "Progress",
    sort: "progress",
  },
  {
    name: "imagesScanned",
    labelKey:
      "imageScanner.registries.configuration.scanTable.header.imagesScanned",
    value: "status.scannedImagesCount",
    sort: "status.scannedImagesCount",
  },
  {
    name: "imagesFound",
    labelKey:
      "imageScanner.registries.configuration.scanTable.header.imagesFound",
    value: "status.imagesCount",
    sort: "status.imagesCount",
  },
  {
    name: "errors",
    labelKey: "imageScanner.registries.configuration.scanTable.header.error",
    value: "status.statusResult.message",
    formatter: "ScanErrorCell",
    sort: "errors",
    width: 150,
  },
];

export const VEX_MANAGEMENT_TABLE = [
  {
    name: "_status",
    labelKey: "imageScanner.vexManagement.table.headers.status",
    value: "spec.enabled",
    formatter: "VexStatusCellBadge",
    sort: "spec.enabled",
  },
  {
    name: "name",
    labelKey: "imageScanner.vexManagement.table.headers.name",
    value: "metadata.name",
    formatter: "VexNameLink",
    sort: "metadata.name",
  },
  {
    name: "uri",
    labelKey: "imageScanner.vexManagement.table.headers.uri",
    value: "spec.url",
    formatter: "UriExternalLink",
    sort: "spec.url",
  },
  {
    name: "createdBy",
    labelKey: "imageScanner.vexManagement.table.headers.createdBy",
    value: (row: any) => {
      const gen = Number(row?.metadata?.generation);
      return gen === 1 ? "Rancher" : "Manual entry";
    },
    sort: "metadata.generation",
  },
  {
    name: "updated",
    labelKey: "imageScanner.vexManagement.table.headers.updated",
    value: (row: any) => row?.metadata?.creationTimestamp || "",
    formatter: "VexDateFormatter",
    sort: "metadata.creationTimestamp",
  },
];

export const IMAGE_LIST_TABLE = [
  {
    name: "name",
    labelKey: "imageScanner.images.listTable.headers.imageName",
    value: "metadata.name",
    formatter: "ImageNameCell",
    sort: "metadata.name",
  },
  {
    name: "cves",
    labelKey: "imageScanner.images.listTable.headers.identifiedCVEs",
    value: "spec.scanResult",
    formatter: "IdentifiedCVEsCell",
    sort: ["spec.scanResult.critical", "spec.scanResult.high", "spec.scanResult.medium", "spec.scanResult.low", "spec.scanResult.none"],
    width: 300,
  },
  {
    name: "repository",
    labelKey: "imageScanner.images.listTable.headers.repository",
    value: "spec.repository",
    sort: "spec..repository",
  },
  {
    name: "registry",
    labelKey: "imageScanner.images.listTable.headers.registry",
    value: "spec.registry",
    sort: "spec.registry",
  },
];

export const REPO_BASED_TABLE = [
  {
    name: "repository",
    labelKey: "imageScanner.images.listTable.headers.repository",
    value: "repository",
    sort: "repository",
    width: 200,
  },
  {
    name: "cves",
    labelKey: "imageScanner.images.listTable.headers.vulnerabilities",
    value: "cveCntByRepo",
    formatter: "IdentifiedCVEsPercentageCell",
    sort: "cveCntByRepo",
    width: 300,
  },
  {
    name: "registry",
    labelKey: "imageScanner.images.listTable.headers.registry",
    value: "registry",
    sort: "registry",
    width: 450,
  },
];

export const REPO_BASED_IMAGE_LIST_TABLE = [
  {
    name: "",
    value: "",
    sort: "",
    width: 60,
  },
  {
    name: "image",
    labelKey: "imageScanner.images.listTable.headers.imageName",
    formatter: "ImageNameCell",
    sort: "metadata.name",
    width: 200,
  },
  {
    name: "cves",
    labelKey: "imageScanner.images.listTable.headers.identifiedCVEs",
    value: "scanResult",
    formatter: "IdentifiedCVEsCell",
    sort: "imageScanner",
    width: 310,
  },
  {
    name: "",
    value: "",
    sort: "",
    width: 450,
  },
];

export const VULNERABILITIES_TABLE = [
  {
    name: "cve",
    labelKey: "imageScanner.vulnerabilities.table.headers.cve",
    value: "metadata.name",
    formatter: "CveNameLink",
    sort: "metadata.name",
    width: 140,
  },
  {
    name: "score",
    labelKey: "imageScanner.vulnerabilities.table.headers.score",
    value: "spec.scoreV3",
    formatter: "ScoreBadgeCell",
    sort: "spec.scoreV3",
    width: 100,
  },
  {
    name: "affectedImages",
    labelKey: "imageScanner.vulnerabilities.table.headers.affectedImages",
    value: "spec.impactedImages",
    formatter: "ImpactedCell",
    formatterParams: { ticks: 23 },
    sort: "spec.impactedImages",
    width: 200,
  },
  {
    name: "severity",
    labelKey: "imageScanner.vulnerabilities.table.headers.severity",
    value: "spec.severity",
    sort: "spec.severity",
    width: 120,
  },
  {
    name: "identifiedImages",
    labelKey: "imageScanner.vulnerabilities.table.headers.identifiedImages",
    value: "spec.identifiedImages",
    formatter: "ImpactedCell",
    formatterParams: { ticks: 45 },
    sort: "spec.identifiedImages",
    width: 300,
  },
];

export const VULNERABILITY_DETAILS_TABLE = [
  {
    name: "cveId",
    labelKey: "imageScanner.imageDetails.table.headers.cveId",
    value: "cveId",
    formatter: "CveNameLink",
    sort: "cveId",
    width: 150,
  },
  {
    name: "score",
    labelKey: "imageScanner.imageDetails.table.headers.score",
    value: "score",
    formatter: "ScoreCell",
    sort: "score",
    width: 100,
  },
  {
    name: "package",
    labelKey: "imageScanner.imageDetails.table.headers.package",
    value: "package",
    sort: "package",
    width: 200,
  },
  {
    name: "fixAvailable",
    labelKey: "imageScanner.imageDetails.table.headers.fixAvailable",
    value: "fixAvailable",
    formatter: "FixAvailableCell",
    sort: "fixAvailable",
    width: 120,
  },
  {
    name: "severity",
    labelKey: "imageScanner.imageDetails.table.headers.severity",
    value: "severity",
    formatter: "SeverityBadgeCell",
    sort: "severity",
    width: 100,
  },
  {
    name: "exploitability",
    labelKey: "imageScanner.imageDetails.table.headers.exploitability",
    value: "exploitability",
    formatter: "ExploitabilityCell",
    sort: "exploitability",
    width: 120,
  },
  {
    name: "packageVersion",
    labelKey: "imageScanner.imageDetails.table.headers.packageVersion",
    value: "packageVersion",
    sort: "packageVersion",
    width: 150,
  },
  {
    name: "packagePath",
    labelKey: "imageScanner.imageDetails.table.headers.packagePath",
    value: "packagePath",
    sort: "packagePath",
    width: 200,
  },
];

export const VULNERABILITIES_DETAIL_IMAGE_LIST_TABLE = [
  {
    name: "imageName",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.imageName",
    value: "imageName",
    formatter: "ImageNameCell",
    sort: "imageName",
    width: 200,
  },
  {
    name: "package",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.package",
    value: "package",
    sort: "package"
  },
  {
    name: "status",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.status",
    value: "status",
    sort: "status",
  },
  {
    name: "fixAvailable",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.fixVersion",
    formatter: "FixAvailableCell",
    value: "fixAvailable",
    sort: "fixAvailable",
  },
  {
    name: "packageVersion",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.packageVersion",
    value: "packageVersion",
    sort: "packageVersion",
  },
  {
    name: "packagePath",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.packagePath",
    value: "packagePath",
    sort: "packagePath",
  },
  {
    name: "repository",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.repository",
    value: "repository",
    sort: "repository",
  }
];

export const VULNERABILITIES_DETAIL_GROUP_BY_REPOSITORY_TABLE = [
  {
    name: "repository",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.repository",
    value: "repository",
    sort: "repository",
    width: 300,
  },
  {
    name: "registry",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.registry",
    value: "registry",
    sort: "registry",
  }
]

export const VULNERABILITIES_DETAIL_SUB_IMAGES_TABLE = [
  {
    name: "",
    value: "",
    sort: "",
    width: 60,
  },
  {
    name: "imageName",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.imageName",
    value: "imageName",
    formatter: "ImageNameCell",
    sort: "imageName",
  },
  {
    name: "package",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.package",
    value: "package",
    sort: "package",
  },
  {
    name: "status",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.status",
    value: "status",
    sort: "status",
  },
  {
    name: "fixAvailable",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.fixVersion",
    formatter: "FixAvailableCell",
    value: "fixAvailable",
    sort: "fixAvailable",
  },
  {
    name: "packageVersion",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.packageVersion",
    value: "packageVersion",
    sort: "packageVersion",
  },
  {
    name: "packagePath",
    labelKey: "imageScanner.vulnerabilities.details.table.headers.packagePath",
    value: "packagePath",
    sort: "packagePath",
  }

]
